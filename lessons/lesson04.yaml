# Lição 4: Trabalhando com Imagens

lesson_name("Introdução ao Docker para Programadores R - Lição 4")

info("Agora que entendemos o que são imagens Docker, vamos aprender a interagir com elas usando a linha de comando do Docker.")
info("O primeiro comando importante é o `docker pull`. Ele é usado para baixar imagens do **Docker Hub**, um vasto repositório de imagens prontas para uso.")

info("Abra o seu terminal (no macOS/Linux) ou PowerShell (no Windows). Vamos baixar a imagem mais recente do sistema operacional Ubuntu. Execute o seguinte comando:")
code_output("docker pull ubuntu:latest")
readline("Pressione Enter depois de executar o comando no seu terminal...")

question("Depois de executar o comando `docker pull ubuntu:latest`, você viu alguma mensagem indicando o progresso do download de diferentes 'layers' (camadas)? (Responda SIM ou NÃO)")
answer("SIM")
answer("NAO")
correct_answer("SIM")
explanation("Você provavelmente viu várias linhas mostrando o download de diferentes camadas. As imagens Docker são construídas em camadas, o que otimiza o compartilhamento e o armazenamento.")

question("Ainda no seu terminal, execute o comando `docker images` (sem argumentos). O que este comando faz?")
answer("Lista todos os contêineres em execução.")
answer("Lista todas as imagens Docker disponíveis localmente na sua máquina.")
answer("Remove todas as imagens Docker não utilizadas.")
answer("Cria uma nova imagem Docker.")
correct_answer("Lista todas as imagens Docker disponíveis localmente na sua máquina.")
explanation("Correto! O comando `docker images` mostra as imagens que você baixou ou construiu localmente.")

info("Observe a saída do comando `docker images`. Você deverá ver uma linha para a imagem `ubuntu` com a tag `latest`. A tag geralmente indica a versão da imagem.")

question("Na saída do `docker images`, qual coluna mostra um identificador único para cada imagem?")
answer("REPOSITORY")
answer("TAG")
answer("IMAGE ID")
answer("CREATED")
correct_answer("IMAGE ID")
explanation("Isso mesmo! O 'IMAGE ID' é um hash que identifica unicamente cada imagem.")

info("Para remover uma imagem Docker da sua máquina, usamos o comando `docker rmi` seguido pelo `IMAGE ID` da imagem. **Tenha cuidado ao remover imagens, pois os contêineres baseados nelas não poderão ser iniciados.**")

info("Primeiro, vamos listar novamente as imagens com `docker images` e copie o `IMAGE ID` da imagem `ubuntu:latest`.")
readline("Pressione Enter depois de listar as imagens e copiar o IMAGE ID...")

info("Agora, execute o seguinte comando no seu terminal, substituindo `<IMAGE ID>` pelo ID que você copiou:")
code_output("docker rmi <IMAGE ID>")
readline("Pressione Enter depois de executar o comando...")

question("Depois de executar o comando `docker rmi <IMAGE ID>`, qual mensagem você provavelmente viu se a remoção foi bem-sucedida?")
answer("Error: No such image")
answer("Untagged: ubuntu:latest")
answer("Successfully removed <IMAGE ID>")
answer("Container is running")
correct_answer("Successfully removed <IMAGE ID>")
explanation("Você deve ter visto uma mensagem indicando que a imagem foi removida com sucesso.")

info("Se você tentar remover uma imagem que está sendo usada por um contêiner, o Docker impedirá a remoção. Veremos isso em lições futuras.")

info("Parabéns! Você aprendeu a baixar e listar imagens Docker, e também como removê-las. Na próxima lição, vamos começar a trabalhar com contêineres.")

# Fim da Lição 4
